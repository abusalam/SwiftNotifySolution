version: '3.4'

networks:
  default:
    name: "${NETWORK_ID}"
    external: false

services:
  angular:
    build:
      context: angular
      dockerfile: ./Dockerfile
    container_name: "${PROJECT_NAME}_angular"
    volumes:
      - ./angular/sns:/app
    expose:
      - '4200'
    labels:
      #- "traefik.http.services.${PROJECT_NAME}_angular.loadbalancer.server.port=4200"
      - "traefik.http.routers.${PROJECT_NAME}_angular.rule=Host(`${PROJECT_BASE_URL}`)"

  dotnet:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: "${PROJECT_NAME}_dotnet"
    command: sleep infinity #dotnet watch --project ./app run --urls "http://0.0.0.0:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=password
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./BackendAPI:/app
    expose:
      - '8081'
    labels:
      #- "traefik.http.services.${PROJECT_NAME}_dotnet.loadbalancer.server.port=8081"
      - "traefik.http.routers.${PROJECT_NAME}_dotnet.rule=Host(`dotnet.${PROJECT_BASE_URL}`)"

  postgres:
    image: postgis/postgis #wodby/postgres:$POSTGRES_TAG
    container_name: "${PROJECT_NAME}_postgres"
    stop_grace_period: 30s
    shm_size: 1g
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d # Place init file(s) here.
      - ./postgres-data:/var/lib/postgresql/data # Use bind mount
  
  adminer:
    container_name: "${PROJECT_NAME}_adminer"
    image: wodby/adminer:$ADMINER_TAG
    init: true
    environment:
      # For PostgreSQL:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: $DB_HOST
      ADMINER_DEFAULT_DB_NAME: $DB_NAME
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_adminer.rule=Host(`adminer.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    restart: always
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock