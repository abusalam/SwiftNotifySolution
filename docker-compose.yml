version: '3.4'

networks:
  default:
    name: "${NETWORK_ID}"
    external: false

services:
  angular:
    build:
      context: .
      dockerfile: Dockerfile.angular
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_angular"
    command: ng serve --host 0.0.0.0 --disable-host-check
    volumes:
      - ./angular:/app
    expose:
      - '4200'
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_angular.rule=Host(`${PROJECT_BASE_URL}`)"

  php:
    image: wodby/laravel-php:$PHP_TAG
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_php"
    env_file:
    - ./.env.laravel
    environment:
      # By default xdebug extension also disabled.
      PHP_EXTENSIONS_DISABLE: xhprof,spx
      APP_KEY: $APP_KEY
      LARAVEL_APP_DEBUG: 'true'
      PHP_MAIL_MIXED_LF_AND_CRLF: On
      # Mailhog:
      MSMTP_HOST: mailhog
      MSMTP_PORT: 1025
      #      # OpenSMTPD:
      #      MSMTP_HOST: opensmtpd
      #      MSMTP_PORT: 25
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      ## Read instructions at https://wodby.com/docs/stacks/laravel/local/#xdebug
      #      PHP_XDEBUG_MODE: debug
      #      PHP_XDEBUG_MODE: profile
      #      PHP_XDEBUG_USE_COMPRESSION: false
      #      PHP_IDE_CONFIG: serverName=my-ide
      #      PHP_XDEBUG_IDEKEY: "my-ide"
    volumes:
    - ./sns-api:/var/www/html:cached
    ## Alternative for macOS users: Mutagen https://wodby.com/docs/stacks/laravel/local#docker-for-mac
    #    - backend:/var/www/html
    ## For XHProf and Xdebug profiler traces
    #    - files:/mnt/files

  queue:
    image: wodby/laravel-php:$PHP_TAG
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_queue"
    #    env_file:
    #    - .laravel.env
    environment:
      SSMTP_MAILHUB: mailhog:1025
      #      SSMTP_MAILHUB: opensmtpd:25
      PHP_SENDMAIL_PATH: '"/usr/bin/dos2unix -u | /usr/sbin/ssmtp -t -f"'
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      QUEUE_CONNECTION: database
    ## Read instructions at https://wodby.com/docs/stacks/laravel/local/#xdebug
    #      PHP_XDEBUG: 1
    #      PHP_XDEBUG_MODE: debug
    #      PHP_XDEBUG_MODE: profile
    #      PHP_XDEBUG_USE_COMPRESSION: false
    #      PHP_IDE_CONFIG: serverName=my-ide
    #      PHP_XDEBUG_IDEKEY: "my-ide"
    #      PHP_XDEBUG_CLIENT_HOST: 172.17.0.1 # Linux
    #      PHP_XDEBUG_CLIENT_HOST: host.docker.internal # Docker 18.03+ Mac/Win
    #      PHP_XDEBUG_CLIENT_HOST: 10.0.75.1 # Windows
    command: ["php", "artisan", "queue:listen"]
    volumes:
    - ./sns-api:/var/www/html:cached
    ## Alternative for macOS users: Mutagen https://wodby.com/docs/stacks/laravel/local#docker-for-mac
    #    - backend:/var/www/html
    ## For XHProf and Xdebug profiler traces
    #    - files:/mnt/files

  # valkey:
  #   container_name: "${PROJECT_NAME}_valkey"
  #   image: wodby/valkey:$VALKEY_TAG
  #   restart: unless-stopped

  nginx:
    image: wodby/nginx:$NGINX_TAG
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
    - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_VHOST_PRESET: php
      NGINX_SERVER_ROOT: /var/www/html/public
    volumes:
    - ./sns-api:/var/www/html:cached
    ## Alternative for macOS users: Mutagen https://wodby.com/docs/stacks/laravel/local#docker-for-mac
    #    - backend:/var/www/html
    labels:
    - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`api.${PROJECT_BASE_URL}`)"

  mailhog:
    image: mailhog/mailhog
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_mailhog"
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  dotnet:
    build:
      context: .
      dockerfile: Dockerfile.dotnet
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_dotnet"
    command: dotnet watch --project . run --urls "http://0.0.0.0:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=password
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ./dotnet/MessagingAPI:/app
    expose:
      - '8081'
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_dotnet.rule=Host(`dotnet.${PROJECT_BASE_URL}`)"

  postgres:
    image: postgis/postgis 
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_postgres"
    stop_grace_period: 30s
    shm_size: 1g
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d # Place init file(s) here.
      - ./postgres-data:/var/lib/postgresql/data # Use bind mount
  
  # adminer:
  #   container_name: "${PROJECT_NAME}_adminer"
  #   image: wodby/adminer:$ADMINER_TAG
  #   restart: unless-stopped
  #   init: true
  #   environment:
  #     # For PostgreSQL:
  #     ADMINER_DEFAULT_DB_DRIVER: pgsql
  #     ADMINER_DEFAULT_DB_HOST: $DB_HOST
  #     ADMINER_DEFAULT_DB_NAME: $DB_NAME
  #   labels:
  #     - "traefik.http.routers.${PROJECT_NAME}_adminer.rule=Host(`adminer.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    restart: unless-stopped
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock